apiVersion: v1
kind: Namespace
metadata:
  name: argo-rollouts
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: argo-rollouts
  namespace: argo-rollouts
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: argo-rollouts
rules:
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods/log
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - replicationcontrollers
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apps
  resources:
  - replicasets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apps
  resources:
  - statefulsets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - argoproj.io
  resources:
  - rollouts
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - argoproj.io
  resources:
  - rollouts/status
  verbs:
  - update
- apiGroups:
  - argoproj.io
  resources:
  - experiments
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - argoproj.io
  resources:
  - experiments/status
  verbs:
  - update
- apiGroups:
  - argoproj.io
  resources:
  - analysisruns
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - argoproj.io
  resources:
  - analysisruns/status
  verbs:
  - update
- apiGroups:
  - argoproj.io
  resources:
  - analysisruns/finalizers
  verbs:
  - update
- apiGroups:
  - argoproj.io
  resources:
  - rollouts/finalizers
  verbs:
  - update
- apiGroups:
  - argoproj.io
  resources:
  - experiments/finalizers
  verbs:
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: argo-rollouts
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: argo-rollouts
subjects:
- kind: ServiceAccount
  name: argo-rollouts
  namespace: argo-rollouts
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: argo-rollouts
  namespace: argo-rollouts
spec:
  replicas: 1
  selector:
    matchLabels:
      app: argo-rollouts
  template:
    metadata:
      labels:
        app: argo-rollouts
    spec:
      serviceAccountName: argo-rollouts
      containers:
      - name: argo-rollouts
        image: quay.io/argoproj/argo-rollouts:v1.7.0
        command:
        - argo-rollouts
        - controller
        env:
        - name: LEADER_ELECTION
          value: "true"
        - name: LEADER_ELECTION_LEASE_DURATION
          value: "15s"
        - name: LEADER_ELECTION_RENEW_DEADLINE
          value: "10s"
        - name: LEADER_ELECTION_RETRY_PERIOD
          value: "2s"
        ports:
        - containerPort: 10253
          name: metrics
        readinessProbe:
          httpGet:
            path: /healthz
            port: 10253
          initialDelaySeconds: 5
          periodSeconds: 5
        livenessProbe:
          httpGet:
            path: /healthz
            port: 10253
          initialDelaySeconds: 5
          periodSeconds: 5
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 500m
            memory: 256Mi
---
apiVersion: v1
kind: Service
metadata:
  name: argo-rollouts-metrics
  namespace: argo-rollouts
spec:
  selector:
    app: argo-rollouts
  ports:
  - port: 10253
    targetPort: 10253
    name: metrics
