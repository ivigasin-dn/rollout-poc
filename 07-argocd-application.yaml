apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: rollout-system
  namespace: argocd
  labels:
    app.kubernetes.io/name: argocd-application
    app.kubernetes.io/part-of: rollout-poc
spec:
  project: default
  source:
    repoURL: https://github.com/your-org/rollout-poc
    targetRevision: HEAD
    path: .
    directory:
      exclude: "*.json"
  destination:
    server: https://kubernetes.default.svc
    namespace: rollout-system
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
    - CreateNamespace=true
    - PrunePropagationPolicy=foreground
    - PruneLast=true
  revisionHistoryLimit: 10
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: rollout-apps
  namespace: argocd
  labels:
    app.kubernetes.io/name: argocd-application
    app.kubernetes.io/part-of: rollout-poc
spec:
  project: default
  source:
    repoURL: https://github.com/your-org/rollout-poc
    targetRevision: HEAD
    path: .
    directory:
      exclude: "*.json"
  destination:
    server: https://kubernetes.default.svc
    namespace: rollout-apps
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
    - CreateNamespace=true
    - PrunePropagationPolicy=foreground
    - PruneLast=true
  revisionHistoryLimit: 10
---
apiVersion: argoproj.io/v1alpha1
kind: AppProject
metadata:
  name: rollout-project
  namespace: argocd
spec:
  description: "Project for rollout POC system"
  sourceRepos:
  - 'https://github.com/your-org/rollout-poc'
  destinations:
  - namespace: 'rollout-system'
    server: https://kubernetes.default.svc
  - namespace: 'rollout-apps'
    server: https://kubernetes.default.svc
  clusterResourceWhitelist:
  - group: 'apiextensions.k8s.io'
    kind: 'CustomResourceDefinition'
  - group: 'argoproj.io'
    kind: 'Application'
  - group: 'argoproj.io'
    kind: 'AppProject'
  namespaceResourceWhitelist:
  - group: 'rollout.io'
    kind: 'NetworkRollout'
  - group: 'rollout.io'
    kind: 'AnalysisTemplate'
  - group: ''
    kind: 'ConfigMap'
  - group: ''
    kind: 'Secret'
  - group: ''
    kind: 'Service'
  - group: 'apps'
    kind: 'Deployment'
  - group: 'apps'
    kind: 'ReplicaSet'
  - group: 'apps'
    kind: 'StatefulSet'
  - group: 'apps'
    kind: 'DaemonSet'
  - group: 'networking.k8s.io'
    kind: 'Ingress'
  - group: 'networking.k8s.io'
    kind: 'NetworkPolicy'
  roles:
  - name: rollout-admin
    description: "Admin role for rollout system"
    policies:
    - p, proj:rollout-project:rollout-admin, applications, *, rollout-project/*, allow
    - p, proj:rollout-project:rollout-admin, repositories, *, *, allow
    - p, proj:rollout-project:rollout-admin, certificates, *, *, allow
    - p, proj:rollout-project:rollout-admin, projects, *, rollout-project, allow
    - p, proj:rollout-project:rollout-admin, logs, *, *, allow
    - p, proj:rollout-project:rollout-admin, exec, *, *, allow
    - p, proj:rollout-project:rollout-admin, clusters, *, *, allow
    groups:
    - argocd-admins
  - name: rollout-developer
    description: "Developer role for rollout system"
    policies:
    - p, proj:rollout-project:rollout-developer, applications, get, rollout-project/*, allow
    - p, proj:rollout-project:rollout-developer, applications, sync, rollout-project/*, allow
    - p, proj:rollout-project:rollout-developer, applications, action/*, rollout-project/*, allow
    - p, proj:rollout-project:rollout-developer, repositories, get, *, allow
    - p, proj:rollout-project:rollout-developer, certificates, get, *, allow
    - p, proj:rollout-project:rollout-developer, projects, get, rollout-project, allow
    - p, proj:rollout-project:rollout-developer, logs, get, *, allow
    groups:
    - argocd-developers
